{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "uksouth"
    },
    "appgwName": {
      "type": "string"
    },
    "tier": {
      "type": "string",
      "defaultValue": "Standard"
    },
    "skuSize": {
      "type": "string",
      "defaultValue": "Standard_Medium"
    },
    "capacity": {
      "type": "int",
      "defaultValue": 2
    },
    "autoScaleMaxCapacity": {
      "type": "int",
      "defaultValue": 10
    },
    "frontEndPort": {
      "type": "int",
      "defaultValue": 80
    },
    "appgwSubnetName": {
      "type": "string",
      "defaultValue": "aks-appgw"
    },
    "enableHttp2": {
      "type": "bool",
      "defaultValue": true
    },
    "zones": {
      "type": "array",
      "defaultValue": []
    },
    "appgwVirtualNetworkName": {
      "type": "string"
    },
    "aksIngressIpAddresses": {
      "type": "array"
    },
    "resourceGroup": {
      "type": "string"
    },
    "invalidHostForProbe": {
      "type": "string",
      "defaultValue": "host.never.exists.rr"
    }
  },
  "variables": {
    "vnetId": "[resourceId(parameters('resourceGroup'),'Microsoft.Network/virtualNetworks/', parameters('appgwVirtualNetworkName'))]",
    "publicIPRef": "",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('appgwSubnetName'))]",
    "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways', parameters('appgwName'))]"
  },
  "resources": [
    {
      "name": "[parameters('appgwName')]",
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2018-12-01",
      "location": "[parameters('location')]",
      "zones": "[parameters('zones')]",
      "comments": "probes.host is set to host.never.exists.rr so that it is invalid so that traefik will ignore the hostname and pick default one",
      "properties": {
        "sku": {
          "name": "[parameters('skuSize')]",
          "tier": "[parameters('tier')]",
          "capacity": "[parameters('capacity')]"
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGatewayFrontendIP",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "appGatewayFrontendPort",
            "properties": {
              "Port": 80
            }
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "http",
              "path": "/ping",
              "interval": "30",
              "timeout": "30",
              "unhealthyThreshold": "3",
              "host": "[parameters('invalidHostForProbe')]",
              "match": {
                "statusCodes": [
                  "200-299"
                ]
              }
            },
            "name": "appGatewayProbe"
          }
        ],
        "backendAddressPools": [
          {
            "name": "appGatewayBackendPool",
            "properties": {
              "BackendAddresses": "[parameters('aksIngressIpAddresses')]"
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "appGatewayBackendHttpSettings",
            "properties": {
              "Port": 80,
              "Protocol": "Http",
              "CookieBasedAffinity": "Disabled",
              "connectionDraining": {
                "enabled": true,
                "drainTimeoutInSec": "60"
              },
              "probe": {
                "id": "[concat(variables('applicationGatewayID'), '/probes/appGatewayProbe')]"
              }
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGatewayHttpListener",
            "properties": {
              "FrontendIPConfiguration": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
              },
              "FrontendPort": {
                "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendPort')]"
              },
              "Protocol": "Http",
              "SslCertificate": null
            }
          }
        ],
        "requestRoutingRules": [
          {
            "Name": "rule1",
            "properties": {
              "RuleType": "Basic",
              "httpListener": {
                "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpListener')]"
              },
              "backendAddressPool": {
                "id": "[concat(variables('applicationGatewayID'), '/backendAddressPools/appGatewayBackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
              }
            }
          }
        ],
        "enableHttp2": "[parameters('enableHttp2')]",
        "sslCertificates": []
      }
    }
  ]
}
