{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "aksClusterName": {
      "type": "string"
    },
    "kubernetesVersion": {
      "type": "string"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B4ms"
    },
    "enableAKSaz": {
      "type": "bool",
      "defaultValue": false
    },
    "osDiskType": {
      "type": "string",
      "defaultValue": "Ephemeral"
    },
    "nodeMinCount": {
      "type": "int"
    },
    "nodeMaxCount": {
      "type": "string"
    },
    "enableAutoScaling": {
      "type": "string"
    },
    "type": {
      "type": "string"
    },
    "aksVnetResourceGroup": {
      "type": "string"
    },
    "aksVnetName": {
      "type": "string"
    },
    "subnetName": {
      "type": "string"
    },
    "aksServiceCidr": {
      "type": "string",
      "defaultValue": "10.0.0.0/16"
    },
    "aksDnsServiceIp": {
      "type": "string",
      "defaultValue": "10.0.0.10"
    },
    "dnsPrefix": {
      "type": "string"
    },
    "sshPublicKey": {
      "type": "string"
    },
    "logAnalyticsResourceId": {
      "type": "string"
    },
    "maxPods": {
      "type": "int",
      "defaultValue": 30
    },
    "environmentName": {
        "type": "string",
        "metadata": {
            "description": "Name of the Environment"
        }
    },
    "branch": {
        "type": "string",
        "defaultValue": "Unknown",
        "metadata": {
            "description": "source branch"
        }
    },
    "managedBy": {
      "type": "string"
    },
    "solutionOwner": {
      "type": "string"
    },
    "activityName": {
      "type": "string"
    },
    "dataClassification": {
      "type": "string"
    },
    "automation": {
      "type": "string"
    },
    "costCentre": {
      "type": "string"
    },
    "environment": {
      "type": "string"
    },
    "criticality": {
      "type": "string"
    },
    "iam": {
      "type":"object"
    },
    "Virtual_Machine_Contributor_Iam_Guid_00": {
      "type":"string"
    },
    "Virtual_Machine_Contributor_Iam_Guid_01": {
      "type":"string"
    },
    "contributor_Iam_Guid_00": {
      "type":"string"
    },
    "contributor_Iam_Guid_01": {
      "type":"string"
    }
  },
  "variables": {
    "osDiskSizeGB": 100, 
    "nodepoolName" : "nodepool",
    "storageProfile": "ManagedDisks",
    "osType": "Linux",
    "adminUsername": "azureuser",
    "nodepoolMode": "System",
    "aksVnetSubnetId": "[resourceId(parameters('aksVnetResourceGroup'),'Microsoft.Network/virtualNetworks/subnets',parameters('aksVnetName'), parameters('subnetName'))]",
    "loadbalancerIpPrefix": "[concat(parameters('aksClusterName'), '-pip')]",
    "MC_RG": "[concat('MC_', resourceGroup().name, '_', parameters('aksclusterName'), '_', 'uksouth')]",
    "Virtual_Machine_Contributor": "[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/',  '9980e02c-c2be-4d73-94e8-173b1dc7cf3c')]",
    "contributor": "[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/',  'b24988ac-6180-42a0-ab88-20f7382dd24c')]"
  },
  "resources": [
    {
      "type": "Microsoft.ContainerService/managedClusters",
      "name": "[parameters('aksClusterName')]",
      "apiVersion": "2020-12-01",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "tags" : {
        "EnvironmentName": "[parameters('environmentName')]",
        "Branch":"[parameters('branch')]",
        "managedBy":"[parameters('managedBy')]",
        "solutionOwner": "[parameters('solutionOwner')]",
        "activityName": "[parameters('activityName')]",
        "dataClassification":"[parameters('dataClassification')]",
        "automation": "[parameters('automation')]",
        "costCentre":"[parameters('costCentre')]",
        "environment": "[parameters('environment')]",
        "criticality": "[parameters('criticality')]"
      },
      "properties": {
        "kubernetesVersion": "[parameters('kubernetesVersion')]",
        "dnsPrefix": "[parameters('dnsPrefix')]",
        "agentPoolProfiles": [
          {
            "name": "[variables('nodepoolName')]",
            "count": "[int(parameters('nodeMinCount'))]",
            "maxCount": "[if(empty(parameters('nodeMaxCount')), json('null') ,int(parameters('nodeMaxCount')))]",
            "minCount": "[int(parameters('nodeMinCount'))]",
            "enableAutoScaling": "[if(empty(parameters('enableAutoScaling')), json('null'), bool(parameters('enableAutoScaling')))]",
            "type": "[parameters('type')]",
            "orchestratorVersion": "[parameters('kubernetesVersion')]",
            "osDiskType": "[parameters('osDiskType')]",
            "scaleSetPriority": "string",
            "scaleSetEvictionPolicy": "string",
            "vmSize": "[parameters('vmSize')]",
            "osDiskSizeGB": "[variables('osDiskSizeGB')]",
            "storageProfile": "[variables('storageProfile')]",
            "maxPods": "[parameters('maxPods')]",
            "vnetSubnetID": "[variables('aksVnetSubnetId')]",
            "osType": "[variables('osType')]",
            "mode": "[variables('nodepoolMode')]",
            "availabilityZones": ["1", "2", "3"]
          }
        ],
        "linuxProfile": {
          "adminUsername": "[variables('adminUsername')]",
          "ssh": {
            "publicKeys": [
              {
                "keyData": "[parameters('sshPublicKey')]"
              }
            ]
          }
        },
        "addonProfiles": {
          "kubeDashboard": {
            "config": null,
            "enabled": false
          },
          "omsagent": {
              "enabled": true,
              "config": {
                  "logAnalyticsWorkspaceResourceID": "[parameters('logAnalyticsResourceId')]"
              }
          }
        },
        "aadProfile": {
          "managed": true,
          "tenantID": "[subscription().tenantId]"
        },
        "networkProfile": {
          "networkPlugin": "azure",
          "serviceCidr": "[parameters('aksServiceCidr')]",
          "dnsServiceIP": "[parameters('aksDnsServiceIp')]",
          "dockerBridgeCidr": "172.17.0.1/16",
          "loadBalancerSku": "Standard",
          "loadBalancerProfile": {
            "outboundIPPrefixes": {
              "publicIPPrefixes": [
                {
                  "id": "[resourceId(parameters('aksVnetResourceGroup'),'Microsoft.Network/publicIPPrefixes', variables('loadbalancerIpPrefix'))]"
                }
              ]
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
          "[resourceId('Microsoft.ContainerService/managedClusters', parameters('aksclusterName'))]"
      ],
      "apiVersion": "2020-06-01",
      "name":"[concat(parameters('aksclusterName'), '-VM-Contributor-Iam')]",
      "resourceGroup": "[variables('MC_RG')]",
      "subscriptionId": "[subscription().subscriptionId]",
      "properties": {
      "mode": "Incremental",
      "template": {
        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
        "contentVersion": "1.0.0.0",
        "parameters": {},
        "variables": {},
        "resources": [
          {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name":  "[if(contains(parameters('aksclusterName'), '00'), parameters('Virtual_Machine_Contributor_Iam_Guid_00'), parameters('Virtual_Machine_Contributor_Iam_Guid_01'))]",
            "properties": {
              "roleDefinitionId": "[variables('Virtual_Machine_Contributor')]",
              "principalId": "[reference(parameters('aksClusterName'), '2020-03-01').identityProfile.kubeletidentity.objectId]",
              "scope":"[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('MC_RG'))]",
              "principalType": "ServicePrincipal"
          }
        }
        ]
      },
      "parameters": {}
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
          "[resourceId('Microsoft.ContainerService/managedClusters', parameters('aksclusterName'))]"
      ],
      "apiVersion": "2020-06-01",
      "name":"[concat(parameters('aksclusterName'), '-Contributor-Iam')]",
      "resourceGroup": "[parameters('aksVnetResourceGroup')]",
      "subscriptionId": "[subscription().subscriptionId]",
      "properties": {
      "mode": "Incremental",
      "template": {
        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
        "contentVersion": "1.0.0.0",
        "parameters": {},
        "variables": {},
        "resources": [
          {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[if(contains(parameters('aksclusterName'), '00'), parameters('contributor_Iam_Guid_00'), parameters('contributor_Iam_Guid_01'))]",
            "properties": {
              "roleDefinitionId": "[variables('contributor')]",
              "principalId": "[reference(resourceId('Microsoft.ContainerService/managedClusters/', parameters('aksclusterName')), '2020-06-01', 'Full').identity.principalId]",
              "scope":"[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('aksVnetResourceGroup'))]",
              "principalType": "ServicePrincipal"
          }
        }
        ]
      },
      "parameters": {}
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "copy": {
      "name": "iam_loop",
      "count": "[length(parameters('iam').permissions)]"
      },
      "dependsOn": [
          "[resourceId('Microsoft.ContainerService/managedClusters', parameters('aksClusterName'))]"
      ],
      "apiVersion": "2020-06-01",
      "name": "[concat(parameters('iam').permissions[copyIndex()].name, '-Iam-aks-',parameters('aksclusterName'))]",
      "resourceGroup": "[parameters('iam').permissions[copyIndex()].resourceGroup]",
      "subscriptionId": "[parameters('iam').permissions[copyIndex()].subscriptionId]",
      "properties": {
      "mode": "Incremental",
      "template": {
        "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
        "contentVersion": "1.0.0.0",
        "parameters": {},
        "variables": {},
        "resources": [
          {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion":  "2020-04-01-preview",
            "name": "[if(contains(parameters('aksclusterName'), '00'), parameters('iam').permissions[copyIndex()].guid_00, parameters('iam').permissions[copyIndex()].guid_01)]",
            "properties": {
              "roleDefinitionId": "[parameters('iam').permissions[copyIndex()].roleDefinitionId]",
              "principalId": "[reference(parameters('aksClusterName'), '2020-03-01').identityProfile.kubeletidentity.objectId]",
              "scope": "[parameters('iam').permissions[copyIndex()].scope]",
              "principalType": "ServicePrincipal"
          }
        }
        ]
      },
      "parameters": {}
      }
    }
  ],
  "outputs": {
      "aksID": {
          "type": "string",
          "value": "[resourceId('Microsoft.ContainerService/managedClusters/', parameters('aksClusterName'))]"
      }
  }
}
