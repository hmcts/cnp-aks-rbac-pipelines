{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "aksVnetName": {
      "type": "string"
    },
    "aksVnetCIDR": {
      "type": "string"
    },
    "aksPrimarySubnetName": {
      "type": "string",
      "defaultValue": "00"
    },
    "aksPrimarySubnetCIDR": {
      "type": "string"
    },
    "aksSecondarySubnetName": {
      "type": "string",
      "defaultValue": "01"
    },
    "aksSecondarySubnetCIDR": {
      "type": "string"
    },
    "appgwSubnetName": {
      "type": "string",
      "defaultValue": "aks-appgw"
    },
    "appgwSubnetCIDR": {
      "type": "string"
    },
    "iaasSubnetName": {
      "type": "string",
      "defaultValue": "iaas"
    },
    "iaasSubnetCIDR": {
      "type": "string"
    },
    "aksVnetDnsServers": {
      "type": "array",
      "defaultValue": []
    },
    "privateDnsZones": {
      "type": "array",
      "defaultValue": []
    },
    "environmentName": {
        "type": "string",
        "metadata": {
            "description": "Name of the Environment"
        }
    },
    "branch": {
        "type": "string",
        "defaultValue": "Unknown",
        "metadata": {
            "description": "source branch"
        }
    },
    "managedBy": {
      "type": "string"
    },
    "solutionOwner": {
      "type": "string"
    },
    "activityName": {
      "type": "string"
    },
    "dataClassification": {
      "type": "string"
    },
    "automation": {
      "type": "string"
    },
    "costCentre": {
      "type": "string"
    },
    "environment": {
      "type": "string"
    },
    "criticality": {
      "type": "string"
    },
    "aksNsgName": {
      "type": "string",
      "defaultValue": "aks-cluster-nsg"
    },
    "appgwNsgName": {
      "type": "string",
      "defaultValue": "aks-appgw-nsg"
    },
    "iaasNsgName": {
      "type": "string",
      "defaultValue": "aks-iaas-nsg"
    },
    "logAnalyticsResourceId": {
      "type": "string"
    },
    "appgwNsgPortrange": {
      "type": "string",
      "defaultValue": "65200-65535"
    },
    "aksNetworkSecurityGroupsSettings": {
      "type": "object",
      "metadata": {
        "description": " AKS NSG settings "
      },
      "defaultValue": {
        "securityRules": []
      }
    },
    "hubVnetId": {
      "type": "string",
      "metadata": {
        "description": "The full ID of the hub vnet to peer to"
      }
    },
    "serviceEndpoints": {
      "type": "array",
      "defaultValue": []
    }
  },
  "variables": {
    "primarySubnetName": "[concat('aks-',parameters('aksPrimarySubnetName'))]",
    "secondarySubnetName": "[concat('aks-',parameters('aksSecondarySubnetName'))]",
    "nsgRulesMapping": {
      "true": "[parameters('aksNetworkSecurityGroupsSettings').securityRules]",
      "false": [{
        "name": "nsgRulesMapping",
        "properties": {}
      }]
    },
    "aksnsgSecurityRules": "[variables('nsgRulesMapping')[string(greater(length(parameters('aksNetworkSecurityGroupsSettings').securityRules), 0))]]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('aksNsgName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2019-04-01",
      "resources": [
        {
          "type": "providers/diagnosticSettings",
          "name": "[concat('Microsoft.Insights/', parameters('aksNsgName'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('aksNsgName'))]"
          ],
          "apiVersion": "2017-05-01-preview",
          "properties": {
            "name": "[parameters('aksNsgName')]",
            "workspaceId": "[parameters('logAnalyticsResourceId')]",
            "logs": [
              {
                "category": "NetworkSecurityGroupEvent",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "NetworkSecurityGroupRuleCounter",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ]
          }
        }
      ]
    },
    {
      "name": "[concat(parameters('aksNsgName') ,'/', variables('aksnsgSecurityRules')[copyIndex()].name)]",
      "condition": "[greater(length(parameters('aksNetworkSecurityGroupsSettings').securityRules), 0)]",
      "type": "Microsoft.Network/networkSecurityGroups/securityRules",
      "apiVersion": "2018-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('aksNsgName'))]"
      ],
      "properties": {
        "description": "[variables('aksnsgSecurityRules')[copyIndex()].description]",
        "priority": "[variables('aksnsgSecurityRules')[copyIndex()].priority]",
        "protocol": "[variables('aksnsgSecurityRules')[copyIndex()].protocol]",
        "sourcePortRange": "[variables('aksnsgSecurityRules')[copyIndex()].sourcePortRange]",
        "destinationPortRange": "[variables('aksnsgSecurityRules')[copyIndex()].destinationPortRange]",
        "sourceAddressPrefix": "[variables('aksnsgSecurityRules')[copyIndex()].sourceAddressPrefix]",
        "destinationPortRanges": "[variables('aksnsgSecurityRules')[copyIndex()].destinationPortRanges]",
        "sourcePortRanges": "[variables('aksnsgSecurityRules')[copyIndex()].sourcePortRanges]",
        "destinationAddressPrefix": "[variables('aksnsgSecurityRules')[copyIndex()].destinationAddressPrefix]",
        "destinationAddressPrefixes": "[variables('aksnsgSecurityRules')[copyIndex()].destinationAddressPrefixes]",
        "access": "[variables('aksnsgSecurityRules')[copyIndex()].access]",
        "direction": "[variables('aksnsgSecurityRules')[copyIndex()].direction]"
      },
      "copy": {
        "name": "aksnsgSecurityRulesCopy",
        "count": "[length(variables('aksnsgSecurityRules'))]",
        "mode": "Serial",
        "batchSize": 1
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('appgwNsgName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2019-04-01",
      "properties": {
        "securityRules": [
          {
            "name": "AllowAzureMgmtPorts",
            "properties": {
              "description": "This port range is required for Azure infrastructure communication. These ports are protected (locked down) by Azure certificates",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "[parameters('appgwNsgPortrange')]",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      },
      "resources": [
        {
          "type": "providers/diagnosticSettings",
          "name": "[concat('Microsoft.Insights/', parameters('appgwNsgName'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('appgwNsgName'))]"
          ],
          "apiVersion": "2017-05-01-preview",
          "properties": {
            "name": "[parameters('appgwNsgName')]",
            "workspaceId": "[parameters('logAnalyticsResourceId')]",
            "logs": [
              {
                "category": "NetworkSecurityGroupEvent",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "NetworkSecurityGroupRuleCounter",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ]
          }
        }
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[parameters('iaasNsgName')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2019-04-01",
      "resources": [
        {
          "type": "providers/diagnosticSettings",
          "name": "[concat('Microsoft.Insights/', parameters('iaasNsgName'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('iaasNsgName'))]"
          ],
          "apiVersion": "2017-05-01-preview",
          "properties": {
            "name": "[parameters('iaasNsgName')]",
            "workspaceId": "[parameters('logAnalyticsResourceId')]",
            "logs": [
              {
                "category": "NetworkSecurityGroupEvent",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              },
              {
                "category": "NetworkSecurityGroupRuleCounter",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ]
          }
        }
      ]
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('aksVnetName')]",
      "apiVersion": "2019-04-01",
      "location": "[resourceGroup().location]",
      "tags" : {
        "EnvironmentName": "[parameters('environmentName')]",
        "Branch":"[parameters('branch')]",
        "managedBy":"[parameters('managedBy')]",
        "solutionOwner": "[parameters('solutionOwner')]",
        "activityName": "[parameters('activityName')]",
        "dataClassification":"[parameters('dataClassification')]",
        "automation": "[parameters('automation')]",
        "costCentre":"[parameters('costCentre')]",
        "environment": "[parameters('environment')]",
        "criticality": "[parameters('criticality')]"
      },
      "scale": null,
      "properties": {
        "addressSpace": {
          "addressPrefixes": ["[parameters('aksVnetCIDR')]"]
        },
        "enableDdosProtection": false,
        "enableVmProtection": false,
        "dhcpOptions": {
          "dnsServers": "[parameters('aksVnetDnsServers')]"
        },
        "subnets": [
          {
            "name": "[variables('primarySubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('aksPrimarySubnetCIDR')]",
              "serviceEndpoints": "[parameters('serviceEndpoints')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('aksNsgName'))]"
              }
            }
          },
          {
            "name": "[variables('secondarySubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('aksSecondarySubnetCIDR')]",
              "serviceEndpoints": "[parameters('serviceEndpoints')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('aksNsgName'))]"
              }
            }
          },
          {
            "name": "[parameters('appgwSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('appgwSubnetCIDR')]",
              "serviceEndpoints": "[parameters('serviceEndpoints')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('appgwNsgName'))]"
              }
            }
          },
          {
            "name": "[parameters('iaasSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('iaasSubnetCIDR')]",
              "serviceEndpoints": "[parameters('serviceEndpoints')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('iaasNsgName'))]"
              }
            }
          }
        ]
      },
      "resources": [
        {
          "apiVersion": "2016-06-01",
          "condition": "[if(equals(parameters('hubVnetId'), ''), bool('false'), bool('true'))]",
          "type": "virtualNetworkPeerings",
          "name": "aks_to_hub",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('aksVnetName'))]"
          ],
          "comments": "Peers AKS to HUB",
          "properties": {
            "allowVirtualNetworkAccess": "true",
            "allowForwardedTraffic": "true",
            "allowGatewayTransit": "false",
            "useRemoteGateways": "false",
            "remoteVirtualNetwork": {
              "id": "[parameters('hubVnetId')]"
            }
          }
        },
        {
          "type": "providers/diagnosticSettings",
          "name": "[concat('Microsoft.Insights/', parameters('aksVnetName'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks', parameters('aksVnetName'))]"
          ],
          "apiVersion": "2017-05-01-preview",
          "properties": {
            "name": "[parameters('aksVnetName')]",
            "workspaceId": "[parameters('logAnalyticsResourceId')]",
            "logs": [
              {
                "category": "VMProtectionAlerts",
                "enabled": true,
                "retentionPolicy": {
                  "days": 0,
                  "enabled": false
                }
              }
            ],
            "metrics": [
              {
                "timeGrain": "PT1M",
                "category": "AllMetrics",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ]
          }
        }
      ],
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('aksNsgName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('appgwNsgName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups',parameters('iaasNsgName'))]"
      ]
    },
    {
      "condition": "[greater(length(parameters('privateDnsZones')), 0)]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-01-01",
      "name": "[parameters('privateDnsZones')[copyIndex()].name]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('aksVnetName'))]"
      ],
      "subscriptionId": "[parameters('privateDnsZones')[copyIndex()].subscriptionId]",
      "resourceGroup": "[parameters('privateDnsZones')[copyIndex()].resourceGroup]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('privateDnsZones')[copyIndex()].name, '/', parameters('aksVnetName'))]",
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-01-01",
              "location": "global",
              "properties": {
                  "registrationEnabled": false,
                  "virtualNetwork": {
                      "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('aksVnetName'))]"
                  }
              }
            }
          ]
        }
      },
      "copy": {
        "name": "privateDnsZonesCopy",
        "count": "[length(parameters('privateDnsZones'))]",
        "mode": "Serial",
        "batchSize": 1
      }
    }
  ],
  "outputs": {
    "aksPrimarySubnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('aksVnetName'), variables('primarySubnetName'))]"
    },
    "aksSecondarySubnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('aksVnetName'), variables('secondarySubnetName'))]"
    }
  }
}